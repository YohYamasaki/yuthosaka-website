---
import s from "../../styles/components/TabContainer.module.css";
import { type Language, LANGUAGES } from "../../i18n/ui";
import type { BaseHeadProps } from "../../components/BaseHead.astro";
import BaseSite from "../../layouts/BaseSite.astro";
import TabContainer from "../../components/TabContainer.astro";
import DynamicPicture from "../../components/common/DynamicPicture.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import type { GeneralContent } from "../../content/config";
import { GENERAL_CONTENTS } from "../../content/config";
import {
  capitalizeFirstLetter,
  removeLangFromContentSlug,
} from "../../utils/urlUtils";

export async function getStaticPaths() {
  return GENERAL_CONTENTS.flatMap((path) =>
    Object.keys(LANGUAGES).map((lang) => ({
      params: { lang: lang as Language, general: path },
      props: { target: path },
    }))
  );
}

const { lang, general } = Astro.params;
const { target } = Astro.props as {
  target: GeneralContent;
};

// get collection only start with the current language
const collection: CollectionEntry<typeof target>[] = await getCollection(
  target,
  ({ slug }) => slug.startsWith(lang),
);

const entryContents = await Promise.all(
  collection.map((entry) => entry.render()),
);

entryContents.sort(
  (a, b) =>
    a.remarkPluginFrontmatter?.order - b.remarkPluginFrontmatter?.order,
);

const slugs = collection.map((entry) => entry.id.split(".")[0]);

const hide = {
  research: false,
  publications: true,
  links: false,
};

const baseHeadProps: BaseHeadProps = {
  title: capitalizeFirstLetter(general),
};
---

<BaseSite {...baseHeadProps}>
  {
    entryContents.map((entry, i) => {
    return (
      <TabContainer
        id={removeLangFromContentSlug(slugs[i])}
        title={entry.remarkPluginFrontmatter.title}
        size="large"
        displayShowMore={hide[target]}
      >
        {
          entry.remarkPluginFrontmatter.imagePath && (
            <div class={s.tabContentImage}>
              <DynamicPicture
                src={entry.remarkPluginFrontmatter.imagePath}
                alt={entry.remarkPluginFrontmatter.title}
              />
            </div>
          )
        }
        <entry.Content />
      </TabContainer>
    );
  })
  }
</BaseSite>
