---
import s from "../styles/components/TabContainer.module.css";

import type { BaseHeadProps } from "../components/BaseHead.astro";
import BaseSite from "../layouts/BaseSite.astro";
import TabContainer from "../components/TabContainer.astro";
import DynamicPicture from "../components/common/DynamicPicture.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import type { GeneralContent } from "../content/config";
import { GENERAL_CONTENTS } from "../content/config";

const baseHeadProps: BaseHeadProps = {
  title: "Blog",
  description: "test",
};

export async function getStaticPaths() {
  return GENERAL_CONTENTS.map((path) => ({
    params: { general: path },
    props: { target: path },
  }));
}

const { target } = Astro.props as {
  target: GeneralContent;
};

const collection: CollectionEntry<typeof target>[] =
  await getCollection(target);

const entryContents = await Promise.all(
  collection.map((entry) => entry.render()),
);

entryContents.sort(
  (a, b) => a.remarkPluginFrontmatter?.order - b.remarkPluginFrontmatter?.order,
);

const slugs = collection.map((entry) => entry.id.split(".")[0]);

const hide = {
  research: false,
  publications: true,
  links: false,
};
---

<BaseSite {...baseHeadProps}>
  {
    entryContents.map((entry, i) => {
      return (
        <TabContainer
          id={slugs[i]}
          title={entry.remarkPluginFrontmatter.title}
          size="large"
          displayShowMore={hide[target]}
        >
          {entry.remarkPluginFrontmatter.imagePath && (
            <div class={s.tabContentImage}>
              <DynamicPicture
                src={entry.remarkPluginFrontmatter.imagePath}
                alt={entry.remarkPluginFrontmatter.title}
              />
            </div>
          )}
          <entry.Content />
        </TabContainer>
      );
    })
  }
</BaseSite>
